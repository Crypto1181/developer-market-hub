import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
    Box,
    Container,
    Paper,
    Typography,
    Tabs,
    Tab,
    TextField,
    Button,
    Grid,
    Divider,
    Alert,
    CircularProgress,
    Card,
    CardContent,
    Chip,
} from '@mui/material';
import {
    CreditCard,
    AccountBalanceWallet,
    Payment as PaymentIcon,
    ArrowBack,
    Lock,
    CheckCircle,
} from '@mui/icons-material';
import { motion } from 'framer-motion';
import { productsAPI, paymentSettingsAPI, getImageUrl } from '../services/api';

const Payment = () => {
    const { id } = useParams();
    const navigate = useNavigate();
    const [activeTab, setActiveTab] = useState(0);
    const [product, setProduct] = useState(null);
    const [paymentSettings, setPaymentSettings] = useState(null);
    const [loading, setLoading] = useState(true);
    const [processing, setProcessing] = useState(false);
    const [paymentSuccess, setPaymentSuccess] = useState(false);

    // Form state for crypto payment
    const [cryptoForm, setCryptoForm] = useState({
        walletAddress: '',
        network: 'ETH',
    });

    useEffect(() => {
        const fetchData = async () => {
            try {
                setLoading(true);
                
                // Fetch both product and payment settings
                const [productResponse, settingsResponse] = await Promise.all([
                    productsAPI.getById(id),
                    paymentSettingsAPI.get()
                ]);
                
                const fetchedProduct = productResponse.data;
                
                // Transform Strapi field names
                const productData = {
                    id: fetchedProduct.documentId || fetchedProduct.id,
                    title: fetchedProduct.Ttile || fetchedProduct.Title || fetchedProduct.title || 'Product',
                    subtitle: fetchedProduct.Subtitle || fetchedProduct.subtitle || '',
                    price: fetchedProduct.Price || fetchedProduct.price || 0,
                    image: fetchedProduct.Product_image || fetchedProduct.image,
                };
                
                setProduct(productData);
                
                // Get payment settings (handle both single item and array response)
                const settings = settingsResponse.data?.length 
                    ? settingsResponse.data[0] 
                    : settingsResponse.data;
                setPaymentSettings(settings);
                
            } catch (error) {
                console.error('Error fetching data:', error);
            } finally {
                setLoading(false);
            }
        };

        fetchData();
    }, [id]);

    const handleTabChange = (event, newValue) => {
        setActiveTab(newValue);
    };

    // Get wallet address based on selected network
    const getWalletAddress = () => {
        if (!paymentSettings) return '0x742d35Cc6634C0532925a3b844Bc454e4438f44e';
        
        switch (cryptoForm.network) {
            case 'BTC':
                return paymentSettings.btc_wallet_address || '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa';
            case 'ETH':
                return paymentSettings.eth_wallet_address || '0x742d35Cc6634C0532925a3b844Bc454e4438f44e';
            case 'USDT':
                return paymentSettings.usdt_wallet_address || paymentSettings.eth_wallet_address || '0x742d35Cc6634C0532925a3b844Bc454e4438f44e';
            default:
                return paymentSettings.eth_wallet_address || '0x742d35Cc6634C0532925a3b844Bc454e4438f44e';
        }
    };

    const handleStripeSubmit = async (e) => {
        e.preventDefault();
        
        // Redirect to Stripe payment link
        const stripeLink = paymentSettings?.Stripe_paymet_link || paymentSettings?.stripe_payment_link;
        if (stripeLink) {
            window.location.href = stripeLink;
        } else {
            alert('Stripe payment link not configured. Please contact support.');
        }
    };

    const handlePaystackSubmit = async (e) => {
        e.preventDefault();
        
        // Redirect to Paystack payment link
        const paystackLink = paymentSettings?.paystack_Url_link;
        if (paystackLink) {
            window.location.href = paystackLink;
        } else {
            alert('Paystack payment link not configured. Please contact support.');
        }
    };

    const handleCryptoSubmit = async (e) => {
        e.preventDefault();
        setProcessing(true);
        
        // Simulate crypto payment confirmation
        setTimeout(() => {
            setProcessing(false);
            setPaymentSuccess(true);
            setTimeout(() => {
                navigate('/');
            }, 2000);
        }, 2000);
    };

    if (loading) {
        return (
            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh' }}>
                <CircularProgress />
            </Box>
        );
    }

    if (!product) {
        return (
            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh' }}>
                <Alert severity="error">Product not found</Alert>
            </Box>
        );
    }

    if (paymentSuccess) {
        return (
            <Box 
                sx={{ 
                    display: 'flex', 
                    justifyContent: 'center', 
                    alignItems: 'center', 
                    minHeight: '100vh',
                    bgcolor: '#f5f5f5',
                }}
            >
                <motion.div
                    initial={{ scale: 0 }}
                    animate={{ scale: 1 }}
                    transition={{ duration: 0.5 }}
                >
                    <Paper sx={{ p: 6, textAlign: 'center', borderRadius: 4 }}>
                        <CheckCircle sx={{ fontSize: 80, color: '#4caf50', mb: 2 }} />
                        <Typography variant="h4" gutterBottom sx={{ fontWeight: 700 }}>
                            Payment Successful!
                        </Typography>
                        <Typography variant="body1" color="text.secondary">
                            Thank you for your purchase. Redirecting to home...
                        </Typography>
                    </Paper>
                </motion.div>
            </Box>
        );
    }

    return (
        <Box sx={{ minHeight: '100vh', bgcolor: '#f5f5f5', py: 4 }}>
            <Container maxWidth="lg">
                <Button
                    startIcon={<ArrowBack />}
                    onClick={() => navigate(-1)}
                    sx={{ mb: 3, color: '#000' }}
                >
                    Back
                </Button>

                <Grid container spacing={4}>
                    {/* Product Summary */}
                    <Grid item xs={12} md={4}>
                        <motion.div
                            initial={{ opacity: 0, x: -30 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ duration: 0.5 }}
                        >
                            <Paper 
                                elevation={0}
                                sx={{ 
                                    p: 3, 
                                    borderRadius: 3,
                                    border: '1px solid rgba(0, 0, 0, 0.1)',
                                    position: 'sticky',
                                    top: 20,
                                }}
                            >
                                <Typography variant="h6" gutterBottom sx={{ fontWeight: 700 }}>
                                    Order Summary
                                </Typography>
                                <Divider sx={{ my: 2 }} />
                                
                                <Typography variant="subtitle1" gutterBottom sx={{ fontWeight: 600 }}>
                                    {product.title}
                                </Typography>
                                <Typography variant="body2" color="text.secondary" sx={{ mb: 3 }}>
                                    {product.subtitle}
                                </Typography>

                                <Box sx={{ bgcolor: 'rgba(33, 150, 243, 0.08)', p: 2, borderRadius: 2, mb: 2 }}>
                                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                                        <Typography variant="body2" color="text.secondary">
                                            Subtotal
                                        </Typography>
                                        <Typography variant="body2">
                                            ${product.price.toFixed(2)}
                                        </Typography>
                                    </Box>
                                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                                        <Typography variant="body2" color="text.secondary">
                                            Tax
                                        </Typography>
                                        <Typography variant="body2">
                                            $0.00
                                        </Typography>
                                    </Box>
                                    <Divider sx={{ my: 1 }} />
                                    <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                                        <Typography variant="h6" sx={{ fontWeight: 700 }}>
                                            Total
                                        </Typography>
                                        <Typography variant="h6" sx={{ fontWeight: 700, color: '#2196f3' }}>
                                            ${product.price.toFixed(2)}
                                        </Typography>
                                    </Box>
                                </Box>

                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 3 }}>
                                    <Lock sx={{ fontSize: 16, color: 'text.secondary' }} />
                                    <Typography variant="caption" color="text.secondary">
                                        Secure payment powered by industry-leading encryption
                                    </Typography>
                                </Box>
                            </Paper>
                        </motion.div>
                    </Grid>

                    {/* Payment Methods */}
                    <Grid item xs={12} md={8}>
                        <motion.div
                            initial={{ opacity: 0, x: 30 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ duration: 0.5 }}
                        >
                            <Paper 
                                elevation={0}
                                sx={{ 
                                    p: 4, 
                                    borderRadius: 3,
                                    border: '1px solid rgba(0, 0, 0, 0.1)',
                                }}
                            >
                                <Typography variant="h5" gutterBottom sx={{ fontWeight: 700, mb: 3 }}>
                                    Payment Method
                                </Typography>

                                <Tabs 
                                    value={activeTab} 
                                    onChange={handleTabChange}
                                    sx={{
                                        borderBottom: '2px solid rgba(0, 0, 0, 0.1)',
                                        mb: 4,
                                        '& .MuiTab-root': {
                                            textTransform: 'none',
                                            fontSize: '1rem',
                                            fontWeight: 600,
                                        },
                                    }}
                                >
                                    <Tab icon={<CreditCard />} iconPosition="start" label="Stripe" />
                                    <Tab icon={<PaymentIcon />} iconPosition="start" label="Paystack" />
                                    <Tab icon={<AccountBalanceWallet />} iconPosition="start" label="Crypto" />
                                </Tabs>

                                {/* Stripe Payment */}
                                {activeTab === 0 && (
                                    <motion.div
                                        initial={{ opacity: 0, y: 20 }}
                                        animate={{ opacity: 1, y: 0 }}
                                        transition={{ duration: 0.3 }}
                                    >
                                        <form onSubmit={handleStripeSubmit}>
                                            <Grid container spacing={3}>
                                                <Grid item xs={12}>
                                                    <Alert severity="info" sx={{ mb: 2 }}>
                                                        You will be redirected to Stripe to complete your payment securely
                                                    </Alert>
                                                </Grid>
                                                <Grid item xs={12}>
                                                    <Card sx={{ bgcolor: 'rgba(102, 126, 234, 0.08)', border: '1px solid rgba(102, 126, 234, 0.2)' }}>
                                                        <CardContent>
                                                            <Typography variant="h6" gutterBottom sx={{ fontWeight: 700 }}>
                                                                Order Total
                                                            </Typography>
                                                            <Typography variant="h4" sx={{ color: '#667eea', fontWeight: 700 }}>
                                                                ${product.price.toFixed(2)} USD
                                                            </Typography>
                                                            <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
                                                                Secure payment powered by Stripe
                                                            </Typography>
                                                        </CardContent>
                                                    </Card>
                                                </Grid>
                                                <Grid item xs={12}>
                                                    <Button
                                                        type="submit"
                                                        variant="contained"
                                                        fullWidth
                                                        size="large"
                                                        sx={{
                                                            py: 1.5,
                                                            borderRadius: 2,
                                                            textTransform: 'none',
                                                            fontSize: '1.1rem',
                                                            fontWeight: 700,
                                                            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                                                            '&:hover': {
                                                                background: 'linear-gradient(135deg, #5568d3 0%, #6a3f8e 100%)',
                                                            },
                                                        }}
                                                    >
                                                        Continue to Stripe
                                                    </Button>
                                                </Grid>
                                            </Grid>
                                        </form>
                                    </motion.div>
                                )}

                                {/* Paystack Payment */}
                                {activeTab === 1 && (
                                    <motion.div
                                        initial={{ opacity: 0, y: 20 }}
                                        animate={{ opacity: 1, y: 0 }}
                                        transition={{ duration: 0.3 }}
                                    >
                                        <form onSubmit={handlePaystackSubmit}>
                                            <Grid container spacing={3}>
                                                <Grid item xs={12}>
                                                    <Alert severity="info" sx={{ mb: 2 }}>
                                                        You will be redirected to Paystack to complete your payment
                                                    </Alert>
                                                </Grid>
                                                <Grid item xs={12}>
                                                    <Card sx={{ bgcolor: 'rgba(0, 112, 186, 0.08)', border: '1px solid rgba(0, 112, 186, 0.2)' }}>
                                                        <CardContent>
                                                            <Typography variant="h6" gutterBottom sx={{ fontWeight: 700 }}>
                                                                Order Total
                                                            </Typography>
                                                            <Typography variant="h4" sx={{ color: '#0070ba', fontWeight: 700 }}>
                                                                ${product.price.toFixed(2)} USD
                                                            </Typography>
                                                            <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
                                                                Secure payment powered by Paystack
                                                            </Typography>
                                                        </CardContent>
                                                    </Card>
                                                </Grid>
                                                <Grid item xs={12}>
                                                    <Button
                                                        type="submit"
                                                        variant="contained"
                                                        fullWidth
                                                        size="large"
                                                        sx={{
                                                            py: 1.5,
                                                            borderRadius: 2,
                                                            textTransform: 'none',
                                                            fontSize: '1.1rem',
                                                            fontWeight: 700,
                                                            bgcolor: '#0070ba',
                                                            '&:hover': {
                                                                bgcolor: '#005ea6',
                                                            },
                                                        }}
                                                    >
                                                        Continue to Paystack
                                                    </Button>
                                                </Grid>
                                            </Grid>
                                        </form>
                                    </motion.div>
                                )}

                                {/* Crypto Payment */}
                                {activeTab === 2 && (
                                    <motion.div
                                        initial={{ opacity: 0, y: 20 }}
                                        animate={{ opacity: 1, y: 0 }}
                                        transition={{ duration: 0.3 }}
                                    >
                                        <form onSubmit={handleCryptoSubmit}>
                                            <Grid container spacing={3}>
                                                <Grid item xs={12}>
                                                    <Alert severity="info" sx={{ mb: 2 }}>
                                                        Pay with cryptocurrency (Bitcoin, Ethereum, USDT)
                                                    </Alert>
                                                </Grid>
                                                <Grid item xs={12}>
                                                    <TextField
                                                        fullWidth
                                                        select
                                                        label="Network"
                                                        value={cryptoForm.network}
                                                        onChange={(e) => setCryptoForm({ ...cryptoForm, network: e.target.value })}
                                                        SelectProps={{ native: true }}
                                                        sx={{
                                                            '& .MuiOutlinedInput-root': {
                                                                borderRadius: 2,
                                                            },
                                                        }}
                                                    >
                                                        <option value="ETH">Ethereum (ETH)</option>
                                                        <option value="BTC">Bitcoin (BTC)</option>
                                                        <option value="USDT">Tether (USDT)</option>
                                                    </TextField>
                                                </Grid>
                                                <Grid item xs={12}>
                                                    <Card sx={{ bgcolor: 'rgba(0, 0, 0, 0.03)', border: '1px dashed rgba(0, 0, 0, 0.2)' }}>
                                                        <CardContent>
                                                            <Typography variant="body2" color="text.secondary" gutterBottom>
                                                                Send payment to:
                                                            </Typography>
                                                            <Typography 
                                                                variant="body1" 
                                                                sx={{ 
                                                                    fontFamily: 'monospace', 
                                                                    wordBreak: 'break-all',
                                                                    fontWeight: 600,
                                                                }}
                                                            >
                                                                {getWalletAddress()}
                                                            </Typography>
                                                            <Chip 
                                                                label={`Amount: $${product.price.toFixed(2)} USD`}
                                                                color="primary"
                                                                sx={{ mt: 2 }}
                                                            />
                                                        </CardContent>
                                                    </Card>
                                                </Grid>
                                                <Grid item xs={12}>
                                                    <TextField
                                                        fullWidth
                                                        label="Your Wallet Address (for confirmation)"
                                                        placeholder="0x..."
                                                        required
                                                        value={cryptoForm.walletAddress}
                                                        onChange={(e) => setCryptoForm({ ...cryptoForm, walletAddress: e.target.value })}
                                                        sx={{
                                                            '& .MuiOutlinedInput-root': {
                                                                borderRadius: 2,
                                                            },
                                                        }}
                                                    />
                                                </Grid>
                                                <Grid item xs={12}>
                                                    <Button
                                                        type="submit"
                                                        variant="contained"
                                                        fullWidth
                                                        size="large"
                                                        disabled={processing}
                                                        sx={{
                                                            py: 1.5,
                                                            borderRadius: 2,
                                                            textTransform: 'none',
                                                            fontSize: '1.1rem',
                                                            fontWeight: 700,
                                                            background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
                                                            '&:hover': {
                                                                background: 'linear-gradient(135deg, #e082ea 0%, #e4465b 100%)',
                                                            },
                                                        }}
                                                    >
                                                        {processing ? (
                                                            <CircularProgress size={24} color="inherit" />
                                                        ) : (
                                                            'Confirm Payment'
                                                        )}
                                                    </Button>
                                                </Grid>
                                            </Grid>
                                        </form>
                                    </motion.div>
                                )}
                            </Paper>
                        </motion.div>
                    </Grid>
                </Grid>
            </Container>
        </Box>
    );
};

export default Payment;

